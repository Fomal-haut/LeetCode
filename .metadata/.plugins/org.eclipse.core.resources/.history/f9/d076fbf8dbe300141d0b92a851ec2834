import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;


public class Solution {
	public int[] twoSum(int[] numbers, int target) {
		int[] result = new int[2];
		Map<Integer, Integer> map = new HashMap<>();
		for (int i=0; i<numbers.length; i++){
			map.put(numbers[i], i);
		}
		Arrays.sort(numbers);
		int forward = 0;
		int backward =numbers.length-1;
		while (backward > forward) {
			if(numbers[forward] + numbers[backward] == target) {
				break;
			} else if(numbers[++forward] + numbers[backward] == target) {
				break;
			} else if(numbers[--forward] + numbers[--backward] == target) {
				break;
			} else {
				forward++;
			}
		}
		int index1 = map.get(numbers[forward]) + 1;
		int index2 = map.get(numbers[backward]) + 1;
		if (index1<index2) {
			result[0]=index1;result[1]=index2;
		} else {
			result[0]=index2;result[1]=index1;
		}
		
		return result;
	}
	
	public static void main(String[] args) {
		int[] tt = {2,5,3,8,1,13};
		Solution solution = new Solution();
		int[] result = solution.twoSum(tt, 9);
		for (int k=0; k<result.length; k++) {
			System.out.println(result[k]);
		}
	}
}
