import java.util.ArrayList;
import java.util.List;


public class Solution {
	public int minimumTotal(List<List<Integer>> triangle) {
		int n = triangle.size();
		List<Integer> dp = new ArrayList<Integer>();
		dp.add(0);
		
		if (triangle.size() == 0) {
			return 0;
		}
		
		for (int i = 0; i < n-1; i++) {
			if (i == 0) {
				dp.set(0, dp.get(0) + triangle.get(i).get(0));
			} else {
				dp.add(0, dp.get(0) + triangle.get(i).get(0));
			}
			for (int j = 1; j < i+1; j++) {
				dp.set(j, triangle.get(i).get(j) +getMin(dp, j ,i));
			}
		}
		
		dp.add(0, dp.get(0) + triangle.get(n-1).get(0));
		int min = triangle.get(n-1).get(1) + getMin(dp, 1 , n-1);
		
		for (int j = 2; j < n; j++) {
			int item = triangle.get(n-1).get(j) + getMin(dp, j, n-1);
			if (min > item) {
				min = item;
			}
		}
		
		return min;
	}

	private Integer getMin(List<Integer> dp, int j, int i) {
		if (j >= i) {
			return dp.get(j);
		} else {
			return dp.get(j) < dp.get(j+1) ? dp.get(j) : dp.get(j+1);
		}
	}
	
	public static void main(String[] args) {
		Solution solution = new Solution();
		List<Integer> list0 = new ArrayList<Integer>();
//		List<Integer> list1 = new ArrayList<Integer>();
//		List<Integer> list2 = new ArrayList<Integer>();
//		List<Integer> list3 = new ArrayList<Integer>();
		list0.add(-10);
//		list1.add(3);
//		list1.add(4);
//		list2.add(6);
//		list2.add(5);
//		list2.add(7);
//		list3.add(4);
//		list3.add(1);
//		list3.add(8);
//		list3.add(3);
		
		List<List<Integer>> totalLists = new ArrayList<List<Integer>> ();
		totalLists.add(list0);
//		totalLists.add(list1);
//		totalLists.add(list2);
//		totalLists.add(list3);
		
		System.out.println(solution.minimumTotal(totalLists));
	}
}
