import java.util.Vector;

public class Solution {
	public boolean exist(char[][] board, String word) {
		int width = board[0].length;
		int height = board.length;
		boolean[][] isOccupied = new boolean[height][width];//记录状态
		Vector<Integer> vector = new Vector<>();
		
		for (int i=0; i<height; i++) {
			for (int j=0; j<width; j++) {
				if (board[i][j] == word.charAt(0)) {
					vector.add(i);
					vector.add(j);
				}
			}
		}
		
		int times = vector.size() / 2;
		
		for (int i=0; i<times; i++) {
			if(search(board, word, vector.get(i), vector.get(i+1), 0, isOccupied) == true) {
				return true;
			}
		}
		
		return false;
	}
	
	public boolean search(char[][] board, String word, int x, int y, int index, boolean[][] isOccupied) {
		if (board[x][y] != word.charAt(index) || isOccupied[x][y] == true) {
			return false;
		}
		for (int i=1; i<=4; i++) {
			
		}
		return true;
	}
}
