public class Solution {
	public void rotate(int[][] matrix) {
		for (int i = 0; i < matrix.length / 2; i++) {
			rotate(i, matrix);
		}
	}
	
	public void rotate(int k, int[][] matrix) {
		int length = matrix.length - 2*k;
		int[] store = new int[length-1];
		for (int i = 0; i < length - 1; i++) {
			store[i] = matrix[k + i][length + k - 1];
		}
		
		//先顺时针转换3次
		for (int i=0; i< length - 1; i++) {
			matrix[k + i][length + k - 1] = matrix[k][k + i];
		}
		
		for (int i = 0; i < length - 1; i++) {
			matrix[k][k + i] = matrix[k + length - 1 - i][k];
		}
		
		for (int i = 0; i < length - 1; i++) {
			matrix[k + length - 1 - i][k] = matrix[k + length - 1][k + length - 1 - i];
		}
		
		for (int i = 0; i< length - 1; i++) {
			matrix[k + length - 1][k + length - 1 - i] = store[i];
		}
	}
	
	public static void main(String[] args) {
		int[][] matrix = {{3,3,2,1},{1,1,2,3},{3,1,4,5},{4,1,3,6}};
		Solution solution = new Solution();
		
	}
}
